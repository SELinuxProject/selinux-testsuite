####### Policy for testing BPF file descriptor transfers via binder #########

attribute binderbpfdomain;

#
################################## Manager ##################################
#
type test_binder_bpf_mgr_t;
testsuite_domain_type(test_binder_bpf_mgr_t)
unconfined_runs_test(test_binder_bpf_mgr_t)
typeattribute test_binder_bpf_mgr_t binderdomain;
allow test_binder_bpf_mgr_t test_binder_bpf_client_t:binder { transfer };
allow test_binder_bpf_mgr_t test_binder_client_no_bpf_perm_t:binder { transfer };
allow test_binder_bpf_mgr_t device_t:chr_file { ioctl open read write };
allow_map(test_binder_bpf_mgr_t, device_t, chr_file)
allow test_binder_bpf_mgr_t self:binder { set_context_mgr };
# For writing to flag file:
allow test_binder_bpf_mgr_t test_file_t:fifo_file { rw_file_perms };

#
########################### Service Provider ################################
#
type test_binder_bpf_provider_t;
testsuite_domain_type(test_binder_bpf_provider_t)
unconfined_runs_test(test_binder_bpf_provider_t)
typeattribute test_binder_bpf_provider_t binderbpfdomain;
allow test_binder_bpf_provider_t test_binder_bpf_mgr_t:binder { call transfer };
allow test_binder_bpf_provider_t device_t:chr_file { ioctl open read write };
allow_map(test_binder_bpf_provider_t, device_t, chr_file)
# For writing to flag file:
allow test_binder_bpf_provider_t test_file_t:fifo_file { rw_file_perms };
# For testing BPF map fd transfer:
allow test_binder_bpf_provider_t self:bpf { map_create map_read map_write prog_load prog_run };
allow test_binder_bpf_provider_t self:capability { sys_resource sys_admin };
allow test_binder_bpf_provider_t self:process { setrlimit };

#
################################# Client ####################################
#
type test_binder_bpf_client_t;
testsuite_domain_type(test_binder_bpf_client_t)
unconfined_runs_test(test_binder_bpf_client_t)
typeattribute test_binder_bpf_client_t binderbpfdomain;
allow test_binder_bpf_client_t test_binder_bpf_provider_t:binder { call impersonate };
allow test_binder_bpf_client_t test_binder_bpf_mgr_t:binder { call };
allow test_binder_bpf_client_t test_binder_bpf_provider_t:fd { use };
allow test_binder_bpf_client_t device_t:chr_file { getattr ioctl open read write };
allow_map(test_binder_bpf_client_t, device_t, chr_file)
# For testing BPF map fd transfer:
allow test_binder_bpf_client_t test_binder_bpf_provider_t:bpf { map_read map_write prog_load prog_run };

#
######################## Client no BPF perms #############################
#
type test_binder_client_no_bpf_perm_t;
testsuite_domain_type(test_binder_client_no_bpf_perm_t)
unconfined_runs_test(test_binder_client_no_bpf_perm_t)
typeattribute test_binder_client_no_bpf_perm_t binderbpfdomain;
allow test_binder_client_no_bpf_perm_t test_binder_bpf_provider_t:binder { call impersonate };
allow test_binder_client_no_bpf_perm_t test_binder_bpf_mgr_t:binder { call };
allow test_binder_client_no_bpf_perm_t test_binder_bpf_provider_t:fd { use };
allow test_binder_client_no_bpf_perm_t device_t:chr_file { getattr ioctl open read write };
allow_map(test_binder_client_no_bpf_perm_t, device_t, chr_file)

#
########### Allow these domains to be entered from sysadm domain ############
#
miscfiles_domain_entry_test_files(binderbpfdomain)
userdom_sysadm_entry_spec_domtrans_to(binderbpfdomain)
