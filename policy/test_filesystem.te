#
######### Test filesystem permissions policy module ##########
#
# Note: The name-based type_transition rules are in test_filesystem_name_trans.te
#
attribute filesystemdomain;
kernel_setsched(filesystemdomain)

# For module filesystems
kernel_request_load_module(filesystemdomain)

#################### Create test file contexts ######################
type test_filesystem_filecon_t;
files_type(test_filesystem_filecon_t)

# type transition context:
type test_filesystem_filetranscon_t;
files_type(test_filesystem_filetranscon_t)

type test_filesystem_file_t;
files_type(test_filesystem_file_t)

################# Test all functions ##########################
type test_filesystem_t;
testsuite_domain_type(test_filesystem_t)
typeattribute test_filesystem_t filesystemdomain;

allow test_filesystem_t self:capability { sys_admin };
allow test_filesystem_t self:filesystem { mount remount quotamod relabelfrom relabelto unmount quotaget };
allow test_filesystem_t test_file_t:dir { add_name mounton read write remove_name rmdir relabelfrom };
# Create test file
allow test_filesystem_t test_filesystem_file_t:dir { read add_name write search mounton };
allow test_filesystem_t test_filesystem_file_t:file { open getattr create read write relabelfrom relabelto };

fs_mount_all_fs(test_filesystem_t)
fs_remount_all_fs(test_filesystem_t)
fs_unmount_all_fs(test_filesystem_t)
fs_relabelfrom_all_fs(test_filesystem_t)
fs_get_xattr_fs_quotas(test_filesystem_t)
files_search_all(test_filesystem_t)
# Required for mount opts "rootcontext=system_u:object_r:test_filesystem_file_t:s0";
fs_associate(test_filesystem_file_t)
fs_getattr_xattr_fs(test_filesystem_t)

# Required when running the tests on a labeled NFS mount.
fs_getattr_nfs(test_filesystem_t)

# Update quotas
fs_set_all_quotas(test_filesystem_t)
allow test_filesystem_t test_filesystem_file_t:file { quotaon };

# Create file and change context via setfilecon(3):
fs_associate(test_filesystem_filecon_t)
allow test_filesystem_t test_filesystem_filecon_t:file { open read getattr relabelto write };

# Create file and change context via type_transition rule:
fs_associate(test_filesystem_filetranscon_t)
type_transition test_filesystem_t test_filesystem_file_t:file test_filesystem_filetranscon_t;
allow test_filesystem_t test_filesystem_filetranscon_t:file { create getattr open write relabelfrom };
dontaudit unconfined_t test_filesystem_filetranscon_t:file { getattr read };

# For NFS
type_transition test_filesystem_t test_file_t:file test_filesystem_filetranscon_t;
allow test_filesystem_filetranscon_t test_filesystem_file_t:filesystem { associate };

#################### Deny filesystem { relabelfrom } ######################
# hooks.c may_context_mount_sb_relabel() FILESYSTEM__RELABELFROM
type test_filesystem_sb_relabel_no_relabelfrom_t;
testsuite_domain_type(test_filesystem_sb_relabel_no_relabelfrom_t)
typeattribute test_filesystem_sb_relabel_no_relabelfrom_t filesystemdomain;

allow test_filesystem_sb_relabel_no_relabelfrom_t self:capability { sys_admin };
fs_associate(test_filesystem_sb_relabel_no_relabelfrom_t)
allow test_filesystem_sb_relabel_no_relabelfrom_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { relabelto } ######################
# hooks.c may_context_mount_sb_relabel() FILESYSTEM__RELABELTO
type test_filesystem_sb_relabel_no_relabelto_t;
testsuite_domain_type(test_filesystem_sb_relabel_no_relabelto_t)
typeattribute test_filesystem_sb_relabel_no_relabelto_t filesystemdomain;

allow test_filesystem_sb_relabel_no_relabelto_t self:capability { sys_admin };
fs_mount_all_fs(test_filesystem_sb_relabel_no_relabelto_t)
fs_relabelfrom_all_fs(test_filesystem_sb_relabel_no_relabelto_t)
fs_associate(test_filesystem_sb_relabel_no_relabelto_t)
allow test_filesystem_sb_relabel_no_relabelto_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { relabelfrom } ######################
# hooks.c may_context_mount_inode_relabel() FILESYSTEM__RELABELFROM
type test_filesystem_no_inode_no_relabelfrom_t;
testsuite_domain_type(test_filesystem_no_inode_no_relabelfrom_t)
typeattribute test_filesystem_no_inode_no_relabelfrom_t filesystemdomain;

allow test_filesystem_no_inode_no_relabelfrom_t self:capability { sys_admin };
fs_associate(test_filesystem_no_inode_no_relabelfrom_t)
allow test_filesystem_no_inode_no_relabelfrom_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { associate } ######################
# hooks.c may_context_mount_inode_relabel() FILESYSTEM__ASSOCIATE
type test_filesystem_inode_relabel_no_associate_t;
testsuite_domain_type(test_filesystem_inode_relabel_no_associate_t)
typeattribute test_filesystem_inode_relabel_no_associate_t filesystemdomain;

allow test_filesystem_inode_relabel_no_associate_t self:capability { sys_admin };
allow test_filesystem_inode_relabel_no_associate_t self:filesystem { relabelto mount relabelfrom };
fs_mount_all_fs(test_filesystem_inode_relabel_no_associate_t)
fs_relabelfrom_all_fs(test_filesystem_inode_relabel_no_associate_t)
allow test_filesystem_inode_relabel_no_associate_t test_file_t:dir { mounton write remove_name rmdir };

########## Deny filesystem { associate } for create file ################
# hooks.c may_create() FILESYSTEM__ASSOCIATE
type test_filesystem_may_create_no_associate_t;
testsuite_domain_type(test_filesystem_may_create_no_associate_t)
typeattribute test_filesystem_may_create_no_associate_t filesystemdomain;

allow test_filesystem_may_create_no_associate_t self:capability { sys_admin };
allow test_filesystem_may_create_no_associate_t self:filesystem { mount relabelfrom relabelto unmount associate };
allow test_filesystem_may_create_no_associate_t test_file_t:dir { mounton write remove_name rmdir };
allow test_filesystem_may_create_no_associate_t self:dir { mounton add_name write };

fs_mount_all_fs(test_filesystem_may_create_no_associate_t)
fs_unmount_all_fs(test_filesystem_may_create_no_associate_t)
fs_relabelfrom_all_fs(test_filesystem_may_create_no_associate_t)
fs_associate(test_filesystem_may_create_no_associate_t)
fs_getattr_xattr_fs(test_filesystem_may_create_no_associate_t)

# Create test file
# neverallow unlabeled_t test_filesystem_may_create_no_associate_t:filesystem { associate };
allow test_filesystem_may_create_no_associate_t self:file { create relabelfrom relabelto };
allow test_filesystem_may_create_no_associate_t unconfined_t:file { open read write };
allow test_filesystem_may_create_no_associate_t unlabeled_t:dir { add_name search write };
allow test_filesystem_may_create_no_associate_t unlabeled_t:file { create open relabelfrom write };

#################### Deny filesystem { quotamod } ######################
# hooks.c selinux_quotactl() FILESYSTEM__QUOTAMOD
type test_filesystem_no_quotamod_t;
testsuite_domain_type(test_filesystem_no_quotamod_t)
typeattribute test_filesystem_no_quotamod_t filesystemdomain;

allow test_filesystem_no_quotamod_t self:capability { sys_admin };
allow test_filesystem_no_quotamod_t self:filesystem { quotaget relabelto mount unmount};
fs_mount_all_fs(test_filesystem_no_quotamod_t)
fs_relabelfrom_all_fs(test_filesystem_no_quotamod_t)
fs_associate(test_filesystem_no_quotamod_t)
# Required as $private_path to quota files
files_search_all(test_filesystem_no_quotamod_t)
allow test_filesystem_no_quotamod_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { quotaget } ######################
# hooks.c selinux_quotactl() FILESYSTEM__QUOTAGET
type test_filesystem_no_quotaget_t;
testsuite_domain_type(test_filesystem_no_quotaget_t)
typeattribute test_filesystem_no_quotaget_t filesystemdomain;

allow test_filesystem_no_quotaget_t self:capability { sys_admin };
allow test_filesystem_no_quotaget_t self:filesystem { quotamod relabelto mount unmount relabelfrom };
allow test_filesystem_no_quotaget_t test_file_t:dir { mounton write remove_name rmdir };
allow test_filesystem_no_quotaget_t self:file { quotaon };
fs_mount_all_fs(test_filesystem_no_quotaget_t)
fs_relabelfrom_all_fs(test_filesystem_no_quotaget_t)
fs_associate(test_filesystem_no_quotaget_t)
# Required as $private_path to quota files
files_search_all(test_filesystem_no_quotaget_t)
# For running quotacheck(8)
files_type(test_filesystem_no_quotaget_t)

#################### Deny file { quotaon } ######################
# hooks.c selinux_quota_on() FILE__QUOTAON
type test_file_no_quotaon_t;
testsuite_domain_type(test_file_no_quotaon_t)
typeattribute test_file_no_quotaon_t filesystemdomain;

allow test_file_no_quotaon_t self:capability { sys_admin };
allow test_file_no_quotaon_t self:filesystem { quotamod quotaget relabelto mount unmount relabelfrom };
allow test_file_no_quotaon_t test_file_t:dir { mounton write remove_name rmdir };
# neverallow test_file_no_quotaon_t self:file { quotaon };

# For XFS:
# neverallow allow test_file_no_quotaon_t self:dir { quotaon };
fs_mount_all_fs(test_file_no_quotaon_t)
fs_relabelfrom_all_fs(test_file_no_quotaon_t)
fs_associate(test_file_no_quotaon_t)
# Required as $private_path to quota files
files_search_all(test_file_no_quotaon_t)
# For running quotacheck(8)
files_type(test_file_no_quotaon_t)

#################### Deny filesystem { mount } ######################
# hooks.c selinux_sb_kern_mount() FILESYSTEM__MOUNT
type test_filesystem_no_mount_t;
testsuite_domain_type(test_filesystem_no_mount_t)
typeattribute test_filesystem_no_mount_t filesystemdomain;

allow test_filesystem_no_mount_t self:capability { sys_admin };
fs_relabelfrom_all_fs(test_filesystem_no_mount_t)
fs_associate(test_filesystem_no_mount_t)
allow test_filesystem_no_mount_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { getattr } ######################
# hooks.c selinux_sb_statfs() FILESYSTEM__GETATTR
type test_filesystem_no_getattr_t;
testsuite_domain_type(test_filesystem_no_getattr_t)
typeattribute test_filesystem_no_getattr_t filesystemdomain;

allow test_filesystem_no_getattr_t self:capability { sys_admin };
fs_mount_all_fs(test_filesystem_no_getattr_t)
fs_unmount_all_fs(test_filesystem_no_getattr_t)
fs_relabelfrom_all_fs(test_filesystem_no_getattr_t)
fs_associate(test_filesystem_no_getattr_t)
allow test_filesystem_no_getattr_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny filesystem { remount } ######################
# hooks.c selinux_mount() FILESYSTEM__REMOUNT
type test_filesystem_no_remount_t;
testsuite_domain_type(test_filesystem_no_remount_t)
typeattribute test_filesystem_no_remount_t filesystemdomain;

allow test_filesystem_no_remount_t self:capability { sys_admin };
fs_mount_all_fs(test_filesystem_no_remount_t)
fs_unmount_all_fs(test_filesystem_no_remount_t)
fs_relabelfrom_all_fs(test_filesystem_no_remount_t)
fs_associate(test_filesystem_no_remount_t)
allow test_filesystem_no_remount_t test_file_t:dir { mounton write remove_name rmdir };

#################### Deny file { mounton } ######################
# hooks.c selinux_move_mount() FILE__MOUNTON
type test_move_mount_no_mounton_t;
testsuite_domain_type(test_move_mount_no_mounton_t)
typeattribute test_move_mount_no_mounton_t filesystemdomain;

allow test_move_mount_no_mounton_t self:capability { sys_admin };
fs_mount_all_fs(test_move_mount_no_mounton_t)
fs_unmount_all_fs(test_move_mount_no_mounton_t)
fs_relabelfrom_all_fs(test_move_mount_no_mounton_t)
fs_associate(test_move_mount_no_mounton_t)
allow test_move_mount_no_mounton_t test_file_t:dir { write remove_name rmdir };
# neverallow test_move_mount_no_mounton_t test_file_t:dir { mounton };

#################### Deny filesystem { unmount } ######################
# hooks.c selinux_umount() FILESYSTEM__UNMOUNT
type test_filesystem_no_unmount_t;
testsuite_domain_type(test_filesystem_no_unmount_t)
typeattribute test_filesystem_no_unmount_t filesystemdomain;

allow test_filesystem_no_unmount_t self:capability { sys_admin };
fs_mount_all_fs(test_filesystem_no_unmount_t)
fs_relabelfrom_all_fs(test_filesystem_no_unmount_t)
fs_associate(test_filesystem_no_unmount_t)
allow test_filesystem_no_unmount_t test_file_t:dir { mounton write remove_name rmdir };

########## Deny filesystem { associate } for setxattr ################
# hooks.c selinux_inode_setxattr() FILESYSTEM__ASSOCIATE
type test_filesystem_inode_setxattr_no_associate_t;
testsuite_domain_type(test_filesystem_inode_setxattr_no_associate_t)
typeattribute test_filesystem_inode_setxattr_no_associate_t filesystemdomain;

allow test_filesystem_inode_setxattr_no_associate_t self:capability { sys_admin };
allow test_filesystem_inode_setxattr_no_associate_t self:filesystem { mount relabelfrom relabelto unmount associate };
allow test_filesystem_inode_setxattr_no_associate_t self:dir { mounton add_name write };
allow test_filesystem_inode_setxattr_no_associate_t test_file_t:dir { mounton write remove_name rmdir };

fs_mount_all_fs(test_filesystem_inode_setxattr_no_associate_t)
fs_unmount_all_fs(test_filesystem_inode_setxattr_no_associate_t)
fs_relabelfrom_all_fs(test_filesystem_inode_setxattr_no_associate_t)
fs_getattr_xattr_fs(test_filesystem_inode_setxattr_no_associate_t)
fs_associate(test_filesystem_inode_setxattr_no_associate_t)

# Create test file
allow test_filesystem_inode_setxattr_no_associate_t self:file { create relabelfrom relabelto };
# neverallow unconfined_t test_filesystem_inode_setxattr_no_associate_t:filesystem { associate };
dontaudit unconfined_t test_filesystem_filecon_t:file { getattr read };
allow test_filesystem_inode_setxattr_no_associate_t unconfined_t:dir { add_name write };
allow test_filesystem_inode_setxattr_no_associate_t unconfined_t:file { create relabelfrom relabelto };

################# Test process { setfscreate } #############
type test_setfscreatecon_t;
testsuite_domain_type(test_setfscreatecon_t)
typeattribute test_setfscreatecon_t filesystemdomain;

allow test_setfscreatecon_t self:capability { sys_admin };
allow test_setfscreatecon_t self:process { setfscreate };
allow test_setfscreatecon_t test_file_t:dir { add_name write remove_name };

# Set new context on fs:
type test_setfscreatecon_newcon_t;
files_type(test_setfscreatecon_newcon_t)
fs_associate(test_setfscreatecon_newcon_t)
allow test_setfscreatecon_t test_setfscreatecon_newcon_t:dir { create getattr rmdir };

# Permit creation of the new file in a NFS filesystem.
# This is required when running the testsuite on a labeled NFS mount.
allow test_setfscreatecon_newcon_t nfs_t:filesystem { associate };

################# deny process { setfscreate } #############
type test_no_setfscreatecon_t;
testsuite_domain_type(test_no_setfscreatecon_t)
typeattribute test_no_setfscreatecon_t filesystemdomain;

allow test_no_setfscreatecon_t self:capability { sys_admin };
# neverallow test_no_setfscreatecon_t self:process { setfscreate };

################# Test fscontext= ##########################
type test_filesystem_fscontext_t;
testsuite_domain_type(test_filesystem_fscontext_t)
typeattribute test_filesystem_fscontext_t filesystemdomain;

type test_filesystem_fscontext_fs_t;
files_type(test_filesystem_fscontext_fs_t)

allow test_filesystem_fscontext_t self:capability { sys_admin };
allow test_filesystem_fscontext_t test_file_t:dir { mounton };
allow test_filesystem_fscontext_t test_filesystem_filecon_t:file { getattr open read relabelto write };
allow test_filesystem_fscontext_t test_filesystem_fscontext_fs_t:dir { add_name search write };
allow test_filesystem_fscontext_t test_filesystem_fscontext_fs_t:file { create getattr open relabelfrom write };
allow test_filesystem_fscontext_t test_filesystem_fscontext_fs_t:filesystem { mount relabelto unmount };
domain_obj_id_change_exemption(test_filesystem_fscontext_t)
fs_relabelfrom_all_fs(test_filesystem_fscontext_t)
files_search_all(test_filesystem_fscontext_t)
allow test_filesystem_filecon_t test_filesystem_fscontext_fs_t:filesystem { associate };

########### Test context= #################
type test_filesystem_context_t;
testsuite_domain_type(test_filesystem_context_t)
typeattribute test_filesystem_context_t filesystemdomain;

type test_filesystem_context_file_t;
files_type(test_filesystem_context_file_t)

allow test_filesystem_context_t self:capability { sys_admin };
allow test_filesystem_context_t test_file_t:dir { mounton };
allow test_filesystem_context_t test_filesystem_context_file_t:dir { add_name search write };
allow test_filesystem_context_t test_filesystem_context_file_t:file { create getattr open read relabelfrom write };
allow test_filesystem_context_t test_filesystem_context_file_t:filesystem { mount relabelfrom relabelto unmount };
allow test_filesystem_context_t test_filesystem_filecon_t:file { getattr open read relabelto write };
fs_mount_all_fs(test_filesystem_context_t)
fs_unmount_all_fs(test_filesystem_context_t)
fs_relabelfrom_all_fs(test_filesystem_context_t)
files_search_all(test_filesystem_context_t)

# For testing defcontext=
allow test_filesystem_fscontext_t test_filesystem_context_file_t:dir { add_name write };
allow test_filesystem_fscontext_t test_filesystem_context_file_t:file { create getattr open write };

# For testing rootcontext= Set mountpoint to unlabeled first
allow test_filesystem_context_t test_file_t:dir { relabelfrom };
allow test_filesystem_context_t unlabeled_t:dir { getattr mounton relabelto };

#
####################### Rules for nfs_filesystem/test ###################
#
files_mounton_mnt(filesystemdomain)
files_mounton_all_poly_members(test_filesystem_t)
fs_search_nfs(filesystemdomain)

allow test_filesystem_t unlabeled_t:dir { relabelto };
allow test_filesystem_t etc_t:filesystem { relabelto relabelfrom mount unmount };

allow test_filesystem_sb_relabel_no_relabelfrom_t self:filesystem { mount relabelto };
allow test_filesystem_sb_relabel_no_relabelfrom_t self:filesystem { mount };

allow test_filesystem_may_create_no_associate_t nfs_t:filesystem { associate };
allow test_filesystem_may_create_no_associate_t unconfined_t:file { getattr relabelto };
allow test_filesystem_may_create_no_associate_t test_file_t:dir { add_name };
allow test_filesystem_may_create_no_associate_t test_file_t:file { create write relabelfrom };
allow test_filesystem_may_create_no_associate_t test_filesystem_file_t:filesystem { mount unmount relabelto };
allow test_file_t test_filesystem_may_create_no_associate_t:filesystem { associate };
allow unconfined_t test_filesystem_may_create_no_associate_t:filesystem { getattr mount relabelto unmount };
# neverallow unconfined_t test_filesystem_may_create_no_associate_t:filesystem { associate };

allow test_filesystem_inode_setxattr_no_associate_t unconfined_t:file { getattr open read write };
allow test_filesystem_inode_setxattr_no_associate_t nfs_t:filesystem { associate };
allow test_filesystem_inode_setxattr_no_associate_t test_file_t:dir { add_name };
allow test_filesystem_inode_setxattr_no_associate_t test_file_t:file { create relabelfrom write };
allow test_file_t test_filesystem_inode_setxattr_no_associate_t:filesystem { associate };
allow unconfined_t test_filesystem_inode_setxattr_no_associate_t:filesystem { getattr mount relabelfrom relabelto unmount };
# neverallow unconfined_t test_filesystem_inode_setxattr_no_associate_t:filesystem { associate };

#
############### Rules for NFS mount ##################
#
userdom_search_user_home_content(filesystemdomain)
allow test_filesystem_t test_filesystem_file_t:filesystem { getattr mount remount unmount relabelto relabelfrom };
allow test_filesystem_t test_file_t:file { create write relabelfrom };
allow test_file_t test_filesystem_file_t:filesystem { associate };
allow test_setfscreatecon_newcon_t test_filesystem_file_t:filesystem { associate };
allow test_filesystem_filecon_t test_filesystem_file_t:filesystem { associate };
allow test_filesystem_no_getattr_t test_filesystem_file_t:filesystem { mount unmount relabelfrom relabelto };
allow test_filesystem_no_getattr_t test_filesystem_file_t:dir { search mounton };
allow test_filesystem_no_mount_t test_filesystem_file_t:filesystem { relabelfrom relabelto };
allow test_filesystem_no_mount_t test_filesystem_file_t:dir { search mounton };
allow test_filesystem_no_remount_t test_filesystem_file_t:filesystem { mount unmount relabelfrom relabelto };
allow test_filesystem_no_remount_t test_filesystem_file_t:dir { search mounton };
allow test_filesystem_no_unmount_t test_filesystem_file_t:filesystem { mount relabelfrom relabelto };
allow test_filesystem_no_unmount_t test_filesystem_file_t:dir { search mounton };
allow test_move_mount_no_mounton_t test_filesystem_file_t:filesystem { relabelto mount };
allow test_move_mount_no_mounton_t test_filesystem_file_t:dir { search };

#
############ Rules for VFAT ##############################
#
gen_require(`
	type dosfs_t;
')
allow test_filesystem_t dosfs_t:file { open getattr write };
allow test_filesystem_context_t dosfs_t:file { open getattr write };
allow test_filesystem_no_getattr_t dosfs_t:filesystem { associate };
allow test_filesystem_no_mount_t dosfs_t:filesystem { associate };
allow test_filesystem_no_remount_t dosfs_t:filesystem { associate };
allow test_filesystem_no_unmount_t dosfs_t:filesystem { associate };
allow test_move_mount_no_mounton_t dosfs_t:filesystem { associate };

#
########### Allow these domains to be entered from sysadm domain ############
#
miscfiles_domain_entry_test_files(filesystemdomain)
userdom_sysadm_entry_spec_domtrans_to(filesystemdomain)
