########################################
#
# Policy for testing the new netlink socket classes.

attribute netlinksocktestdomain;

#
# netlink_socket_test(newclass)
#
# Generate a pair of test domains and rules to test
# that the kernel checks permission against the
# 'newclass' security class rather than the generic
# 'netlink_socket' security class.
#
define(`netlink_socket_test', `
# Domain that is allowed to create $1_socket.
type test_$1_t;
testsuite_domain_type(test_$1_t)
typeattribute test_$1_t netlinksocktestdomain;

# Allow $1 but not netlink_socket.
# This is to ensure that the kernel is checking the right class.
allow test_$1_t self:$1 create_socket_perms;

# Domain that is not allowed to create $1.
type test_no_$1_t;
testsuite_domain_type(test_no_$1_t)
typeattribute test_no_$1_t netlinksocktestdomain;

# Allow netlink_socket but not $1.
# This is to ensure that the kernel is checking the right class.
allow test_no_$1_t self:netlink_socket create_socket_perms;
')

netlink_socket_test(netlink_iscsi_socket)
netlink_socket_test(netlink_netfilter_socket)
netlink_socket_test(netlink_generic_socket)
netlink_socket_test(netlink_crypto_socket)

#
# Common rules for all netlink socket class test domains.
#

# Entry into the test domains via the test program.
miscfiles_domain_entry_test_files(netlinksocktestdomain)

# Trigger kernel module auto-loading of the protocol implementations.
kernel_request_load_module(netlinksocktestdomain)
