#################################
#
# Policy for testing ipc permissions
#

attribute ipcdomain;

# Base domain for IPC tests, has all IPC permissions 
type test_ipc_base_t;
testsuite_domain_type(test_ipc_base_t)
typeattribute test_ipc_base_t ipcdomain;
allow test_ipc_base_t self:msgq create;

# Domain that has read only access to IPC resources
type test_ipc_read_t;
testsuite_domain_type(test_ipc_read_t)
typeattribute test_ipc_read_t ipcdomain;

# Domain that can't create, associate, control, or use IPC resources
type test_ipc_none_t;
testsuite_domain_type(test_ipc_none_t)
typeattribute test_ipc_none_t ipcdomain;

# Domain that can associate, but not do anything else
type test_ipc_associate_t;
testsuite_domain_type(test_ipc_associate_t)
typeattribute test_ipc_associate_t ipcdomain;

# Give IPC perms to self.
allow ipcdomain self:msgq create_msgq_perms;
allow ipcdomain self:msg  { send receive };

# Give the read only domain basic access. The macro adds:
# associate, getattr, read, unix_read perms
allow test_ipc_read_t test_ipc_base_t:sem {unix_read unix_write};
allow test_ipc_read_t test_ipc_base_t:sem r_sem_perms;
allow test_ipc_read_t test_ipc_base_t:msgq r_msgq_perms;
allow test_ipc_read_t test_ipc_base_t:shm r_shm_perms;
allow test_ipc_read_t test_ipc_base_t:msg {receive};
# Ok, not strictly a read-only domain, it needs unix_write (course
# grain permission) in order to test some finer grained permissions
allow test_ipc_read_t test_ipc_base_t:msgq {unix_write};

# Allow the base domain to access just about everything
# in the read-only domain
allow test_ipc_base_t test_ipc_read_t:msg {send};
allow test_ipc_base_t test_ipc_read_t:sem {unix_read unix_write};
allow test_ipc_base_t test_ipc_read_t:sem rw_sem_perms;
allow test_ipc_base_t test_ipc_read_t:msgq rw_msgq_perms;
allow test_ipc_base_t test_ipc_read_t:shm rw_shm_perms;
kernel_get_sysvipc_info(test_ipc_base_t)

# allow the associate domain to only associate with
# the base domain (with added course-grained permissions)
allow test_ipc_associate_t test_ipc_base_t:sem {unix_read unix_write associate};
allow test_ipc_associate_t test_ipc_base_t:shm {unix_read unix_write associate};
allow test_ipc_associate_t test_ipc_base_t:msgq {unix_read unix_write associate};

# allow to lock down an IPC region created by self
allow test_ipc_base_t test_ipc_base_t:capability ipc_lock;

# Needed for msgctl IPC_SET test
allow test_ipc_associate_t test_ipc_associate_t:capability sys_resource;

# Access tmpfs/shm file systems.
fs_rw_tmpfs_files(ipcdomain)

# Allow all of these domains to be entered from user domains.
# via a shell script in the test directory or by another program.
miscfiles_domain_entry_test_files(ipcdomain)
userdom_sysadm_entry_spec_domtrans_to(ipcdomain)
corecmd_bin_entry_type(ipcdomain)
sysadm_bin_spec_domtrans_to(ipcdomain)

allow test_ipc_base_t self:sem create_sem_perms;
allow test_ipc_base_t self:shm create_shm_perms;
# ipcrm needs this... 
userdom_search_user_home_dirs(test_ipc_base_t)
