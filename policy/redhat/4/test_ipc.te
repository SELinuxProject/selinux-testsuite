#################################
# 
# Policy for testing ipc permissions
#

# Base domain for IPC tests, has all IPC permissions  every.te gives
# all IPC perms to self.
type test_ipc_base_t, domain, ipcdomain, testdomain;

# Domain that has read only access to IPC resources
type test_ipc_read_t, domain, ipcdomain, testdomain;

# Domain that can't create, associate, control, or use IPC resources
type test_ipc_none_t, domain, ipcdomain, testdomain;

# Domain that can associate, but not do anything else
type test_ipc_associate_t, domain, ipcdomain, testdomain;

# Give the read only domain basic access. The macro adds:
# associate, getattr, read, unix_read perms
allow test_ipc_read_t test_ipc_base_t:sem {unix_read unix_write};
allow test_ipc_read_t test_ipc_base_t:sem r_sem_perms;
allow test_ipc_read_t test_ipc_base_t:msgq r_msgq_perms;
allow test_ipc_read_t test_ipc_base_t:shm r_shm_perms;
allow test_ipc_read_t test_ipc_base_t:msg {receive};
# Ok, not strictly a read-only domain, it needs unix_write (course
# grain permission) in order to test some finer grained permissions
allow test_ipc_read_t test_ipc_base_t:msgq {unix_write};

# Allow the base domain to access just about everything 
# in the read-only domain
allow test_ipc_base_t test_ipc_read_t:msg {send};
allow test_ipc_base_t test_ipc_read_t:sem {unix_read unix_write};
allow test_ipc_base_t test_ipc_read_t:sem rw_sem_perms;
allow test_ipc_base_t test_ipc_read_t:msgq rw_msgq_perms;
allow test_ipc_base_t test_ipc_read_t:shm rw_shm_perms;
allow test_ipc_base_t kernel_t:system { ipc_info };

# allow the associate domain to only associate with 
# the base domain (with added course-grained permissions)
allow test_ipc_associate_t test_ipc_base_t:sem {unix_read unix_write associate};
allow test_ipc_associate_t test_ipc_base_t:shm {unix_read unix_write associate};
allow test_ipc_associate_t test_ipc_base_t:msgq {unix_read unix_write associate};


# allow to lock down an IPC region created by self
allow test_ipc_base_t test_ipc_base_t:capability ipc_lock;

# Needed for msgctl IPC_SET test
allow test_ipc_associate_t test_ipc_associate_t:capability sys_resource;

# Access tmpfs/shm file systems.
allow domain tmpfs_t:file {read write};

# Allow all of these domains to be entered from user domains.
# via a shell script in the test directory or by another program.
domain_trans(sysadm_t, test_file_t, ipcdomain)
domain_trans(sysadm_t, bin_t, ipcdomain)

# Allow the user shell to read the /proc/PID entries for these domains.
allow sysadm_t ipcdomain:dir r_dir_perms;
allow sysadm_t ipcdomain:file r_file_perms;

